version: '3.8'

services:
  # Embeddings service - must start first
  embeddings-service:
    build:
      context: ./embeddings-service
      dockerfile: Dockerfile
    container_name: ai-ua-embeddings
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - TRANSFORMERS_CACHE=/app/models
    volumes:
      - ./embeddings-service/models:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    networks:
      - ai-ua-network
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Main API service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-ua-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      - EMBEDDINGS_HOST=embeddings-service
      - EMBEDDINGS_PORT=8001
    volumes:
      - ./backend/models:/app/models:ro
    depends_on:
      embeddings-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - ai-ua-network
    deploy:
      resources:
        limits:
          memory: 20G
        reservations:
          memory: 10G

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-ua-prometheus
    restart: unless-stopped
    ports:
      - "${METRICS_PORT:-9090}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - api
    networks:
      - ai-ua-network
    profiles:
      - monitoring

volumes:
  prometheus-data:
    driver: local

networks:
  ai-ua-network:
    driver: bridge
